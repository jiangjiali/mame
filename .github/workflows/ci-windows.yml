name: CI (Windows)

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'tag name'
        required: true
# on:
#   push:
#     paths:
#     - '3rdparty/**'
#     - 'scripts/**'
#     - 'src/**'
#     - 'COPYING'
#     - 'makefile'
#   pull_request:
#     paths:
#     - '3rdparty/**'
#     - 'scripts/**'
#     - 'src/**'
#     - 'COPYING'
#     - 'makefile'

permissions:
  contents: read

jobs:

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        install: git make mingw-w64-x86_64-gcc mingw-w64-x86_64-python mingw-w64-x86_64-lld mingw-w64-x86_64-libc++
    - uses: actions/checkout@master
    - name: Build
      env:
        MINGW64: "/mingw64"
        OVERRIDE_AR: "llvm-ar"
        OVERRIDE_CC: gcc
        OVERRIDE_CXX: g++
        ARCHOPTS: "-fomit-frame-pointer -fuse-ld=lld"
        SUBTARGET: neogeo
        SOURCES: "src/mame/neogeo"
        OPTIMIZE: 3
        DEPRECATED: 0
        NOWERROR: 1
        TOOLS: 1
        SEPARATE_BIN: 1
        PTR64: 1
        SYMBOLS: 1
        SYMLEVEL: 1
      run: make -j9 && make -f dist.mak TARGET=neogeo
    - uses: actions/upload-artifact@master
      with:
        name: neogeo-windows
        path: ./build/release/x64/Release/neogeo/**/*

  publish:
    runs-on: ubuntu-latest
    needs: [ windows ]
    steps:
      - uses: actions/download-artifact@v3.0.2
        with:
          name: neogeo-windows
          path: neogeo-windows/

      - name: Create Asset
        run: |
          cd neogeo-windows/ && tar cvfz ../neogeo_${{ github.event.inputs.tag_name }}.tgz ./ && cd -

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Tag:${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./neogeo_${{ github.event.inputs.tag_name }}.tgz
          asset_name: neogeo_${{ github.event.inputs.tag_name }}.tgz
          asset_content_type: application/tgz
